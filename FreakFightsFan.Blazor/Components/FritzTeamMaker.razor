@inherits FritzFormInputBase<List<CreateTeamModel>>
@using static FreakFightsFan.Shared.Features.Fights.Commands.CreateFight;

@* <MudTextField T="List<CreateTeamModel>"
              Value=Teams
              ValueChanged=OnValueChanged
              For=For
              OnlyValidateIfDirty=OnlyValidateIfDirty
              Style="display: none;" /> *@

<MudGrid Spacing=1
         Justify=Justify.FlexStart>
    <MudItem xs=10>
        <FritzFighterPicker @ref=_addFighterField
                            @bind-Value=_fighter
                            For="() => _fighter"
                            Label=@Localizer[nameof(AppStrings.Fighter)]
                            Teams=TeamHelperModel />
        <FritzValidationMessage For=For />
        @if (ForEventId is not null)
        {
            <FritzValidationMessage For=ForEventId />
        }
    </MudItem>
    <MudItem xs=2
             Class="d-flex">
        <MudButton OnClick=AddFighterToSelectedTeam
                   Class="align-self-end"
                   Color=Color.Primary
                   Variant=Variant.Filled>
            @Localizer[nameof(AppStrings.Add)]
        </MudButton>
    </MudItem>
    @foreach (var team in TeamHelperModel)
    {
        <MudItem xs=12
                 md=6
                 @onclick="() => SelectTeam(team.Number)"
                 Style="cursor: pointer;">
            <MudText Typo=Typo.h6
                     Color="(SelectedTeam == team.Number) ? Color.Primary : Color.Default"
                     GutterBottom=true>
                @Localizer[nameof(AppStrings.Team)] @($"{team.Number + 1}")
            </MudText>
            @if (team.Fighters.Any())
            {
                <MudPaper Width="100%"
                          Class=@((SelectedTeam == team.Number) ? "mud-theme-primary" : "")>
                    <MudList Style="cursor: auto;">
                        @foreach (var fighter in team.Fighters)
                        {
                            <MudListItem>
                                <FighterListItem FighterHelperModel=@fighter
                                                 FightResultChanged=UpdateTeams
                                                 OnDeleteFighter="() => DeleteFighterListItem(team, fighter)" />
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
            }
        </MudItem>
    }
</MudGrid>
