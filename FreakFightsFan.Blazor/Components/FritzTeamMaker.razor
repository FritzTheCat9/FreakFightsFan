@inherits FritzFormInputBase<List<CreateTeamModel>>
@using static FreakFightsFan.Shared.Features.Fights.Commands.CreateFight;

@* <MudTextField T="List<CreateTeamModel>"
              Value=Teams
              ValueChanged=OnValueChanged
              For=For
              OnlyValidateIfDirty=OnlyValidateIfDirty
              Style="display: none;" /> *@

<MudGrid Justify="Justify.FlexStart"
         Spacing="1">
    <MudItem xs="10">
        <FritzFighterPicker @bind-Value="_fighter"
                            For="() => _fighter"
                            Label="@localizer[nameof(AppStrings.Fighter)]"
                            @ref="_addFighterField"
                            Teams="TeamHelperModel" />
        <FritzValidationMessage For="For" />
        @if (ForEventId is not null)
        {
            <FritzValidationMessage For=ForEventId />
        }
    </MudItem>
    <MudItem Class="d-flex"
             xs="2">
        <MudButton Class="align-self-end"
                   Color="Color.Primary"
                   OnClick="AddFighterToSelectedTeam"
                   Variant="Variant.Filled">
            @localizer[nameof(AppStrings.Add)]
        </MudButton>
    </MudItem>
    @foreach (var team in TeamHelperModel)
    {
        <MudItem md=6
                 @onclick="() => SelectTeam(team.Number)"
                 Style="cursor: pointer;"
                 xs=12>
            <MudText Color="SelectedTeam == team.Number ? Color.Primary : Color.Default"
                     GutterBottom=true
                     Typo=Typo.h6>
                @localizer[nameof(AppStrings.Team)] @($"{team.Number + 1}")
            </MudText>
            @if (team.Fighters.Any())
            {
                <MudPaper Class=@(SelectedTeam == team.Number ? "mud-theme-primary" : "")
                          Width="100%">
                    <MudList Style="cursor: auto;"
                             T="FighterHelperModel">
                        @foreach (var fighter in team.Fighters)
                        {
                            <MudListItem>
                                <FighterListItem FighterHelperModel="@fighter"
                                                 FightResultChanged="UpdateTeams"
                                                 OnDeleteFighter="() => DeleteFighterListItem(team, fighter)" />
                            </MudListItem>
                        }
                    </MudList>
                </MudPaper>
            }
        </MudItem>
    }
</MudGrid>