@inject IEventApiClient EventApiClient
@inject IMyDictionaryItemClientHelper MyDictionaryItemClientHelper
@inject IExceptionHandler ExceptionHandler

<MudForm Model="CreateEventCommand" @ref="form" Validation="validationErrors.Validate">
    <MudDialog DefaultFocus="DefaultFocus.LastChild">
        <DialogContent>
            <MudTextField Label="Name" @bind-Value="CreateEventCommand.Name" For="() => CreateEventCommand.Name" />
            <MudDatePicker Label="Date" @bind-Date="CreateEventCommand.Date" For="() => CreateEventCommand.Date" Editable="true" Placeholder="Select Date" />
            <MudAutocomplete T="MyDictionaryItemDto" Label="City" @bind-Value="City" SearchFuncWithCancel="MyDictionaryItemClientHelper.SearchCity" Variant="Variant.Text"
                             ShowProgressIndicator="true" ToStringFunc="MyDictionaryItemClientHelper.DisplayDictionaryItem" SelectValueOnTab="true" ResetValueOnEmptyText="true" FullWidth="true">
                <NoItemsTemplate>
                    <MudText>No items found in dictionary with code: "@DictionaryCode.City"</MudText>
                </NoItemsTemplate>
            </MudAutocomplete>
            <MudAutocomplete T="MyDictionaryItemDto" Label="Hall" @bind-Value="Hall" SearchFuncWithCancel="MyDictionaryItemClientHelper.SearchHall" Variant="Variant.Text"
                             ShowProgressIndicator="true" ToStringFunc="MyDictionaryItemClientHelper.DisplayDictionaryItem" SelectValueOnTab="true" ResetValueOnEmptyText="true" FullWidth="true">
                <NoItemsTemplate>
                    <MudText>No items found in dictionary with code: "@DictionaryCode.Hall"</MudText>
                </NoItemsTemplate>
            </MudAutocomplete>
        </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton OnClick="HandleValidSubmit" Color="Color.Primary">Create</MudButton>
        </DialogActions>
    </MudDialog>
</MudForm>

@code {
    [CascadingParameter] MudDialogInstance MudDialog { get; set; }
    [Parameter] public CreateEvent.Command CreateEventCommand { get; set; } = new();
    public MyDictionaryItemDto City { get; set; }
    public MyDictionaryItemDto Hall { get; set; }

    private ValidationErrors validationErrors = new();
    private MudForm form;

    private void Cancel() => MudDialog.Cancel();

    private async Task HandleValidSubmit()
    {
        try
        {
            CreateEventCommand.CityId = City?.Id;
            CreateEventCommand.HallId = Hall?.Id;

            await EventApiClient.CreateEvent(CreateEventCommand);
            MudDialog.Close(DialogResult.Ok(true));
        }
        catch (MyValidationException validationException)
        {
            validationErrors.Errors = validationException.Errors;
            await form.Validate();
        }
        catch (Exception ex)
        {
            ExceptionHandler.HandleExceptions(ex);
        }
    }
}
