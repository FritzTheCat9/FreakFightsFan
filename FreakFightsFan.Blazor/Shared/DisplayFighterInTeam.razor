@if (FighterInTeam.Fighter != null)
{
    <MudStack Justify="Justify.Center" Spacing="1">
        @if (!string.IsNullOrEmpty(FighterInTeam.Fighter.Image?.Url))
        {
            <MudLink Class="align-self-center" Href="@FighterInTeam.Fighter.Image.Url" Target="_blank">
                <MudImage Src="@FighterInTeam.Fighter.Image.Url" ObjectFit="ObjectFit.Contain" Fluid="true" Alt="Image" Style="max-height: 250px;" />
            </MudLink>
        }
        else
        {
            // TODO: Show default player image
        }
        <MudText Typo="Typo.subtitle1" Class="align-self-center" Style="font-weight: bold; text-align: center;">@FighterInTeam.Fighter.Nickname.ToUpper()</MudText>
        <MudText Typo="Typo.subtitle2" Class="align-self-center" Style="text-align: center;">@FighterInTeam.Fighter.FirstName.ToUpper() @FighterInTeam.Fighter.LastName.ToUpper()</MudText>
        <MudPaper Style="@($"background:{GetFightResultColor(FighterInTeam.FightResult)};")" Square="true">
            <MudText Typo="Typo.subtitle2" Class="align-self-center" Style="text-align: center;">@FighterInTeam.FightResult.ToText()</MudText>
        </MudPaper>
    </MudStack>
}


@code {
    [Parameter] public FighterInTeamDto FighterInTeam { get; set; }

    protected override void OnInitialized()
    {

    }

    public string GetFightResultColor(FightResult fightResult)
    {
        switch (fightResult)
        {
            case FightResult.UPCOMING:
                return Colors.Grey.Default;
            case FightResult.WIN:
                return Colors.Green.Default;
            case FightResult.LOSS:
                return Colors.Red.Default;
            case FightResult.DRAW:
                return Colors.Grey.Default;
            case FightResult.NO_CONTEST:
                return Colors.Blue.Default;
            default:
                return Colors.Grey.Default;
        }
    }
}
